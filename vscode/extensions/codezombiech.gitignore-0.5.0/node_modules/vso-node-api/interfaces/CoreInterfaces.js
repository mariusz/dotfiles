/*
* ---------------------------------------------------------
* Copyright(C) Microsoft Corporation. All rights reserved.
* ---------------------------------------------------------
*
* ---------------------------------------------------------
* Generated file, DO NOT EDIT
* ---------------------------------------------------------
*/
"use strict";
var VSSInterfaces = require("../interfaces/common/VSSInterfaces");
(function (ConnectedServiceKind) {
    /**
     * Custom or unknown service
     */
    ConnectedServiceKind[ConnectedServiceKind["Custom"] = 0] = "Custom";
    /**
     * Azure Subscription
     */
    ConnectedServiceKind[ConnectedServiceKind["AzureSubscription"] = 1] = "AzureSubscription";
    /**
     * Chef Connection
     */
    ConnectedServiceKind[ConnectedServiceKind["Chef"] = 2] = "Chef";
    /**
     * Generic Connection
     */
    ConnectedServiceKind[ConnectedServiceKind["Generic"] = 3] = "Generic";
})(exports.ConnectedServiceKind || (exports.ConnectedServiceKind = {}));
var ConnectedServiceKind = exports.ConnectedServiceKind;
(function (ProcessType) {
    ProcessType[ProcessType["System"] = 0] = "System";
    ProcessType[ProcessType["Custom"] = 1] = "Custom";
    ProcessType[ProcessType["Inherited"] = 2] = "Inherited";
})(exports.ProcessType || (exports.ProcessType = {}));
var ProcessType = exports.ProcessType;
(function (ProjectChangeType) {
    ProjectChangeType[ProjectChangeType["Modified"] = 0] = "Modified";
    ProjectChangeType[ProjectChangeType["Deleted"] = 1] = "Deleted";
    ProjectChangeType[ProjectChangeType["Added"] = 2] = "Added";
})(exports.ProjectChangeType || (exports.ProjectChangeType = {}));
var ProjectChangeType = exports.ProjectChangeType;
(function (SourceControlTypes) {
    SourceControlTypes[SourceControlTypes["Tfvc"] = 1] = "Tfvc";
    SourceControlTypes[SourceControlTypes["Git"] = 2] = "Git";
})(exports.SourceControlTypes || (exports.SourceControlTypes = {}));
var SourceControlTypes = exports.SourceControlTypes;
exports.TypeInfo = {
    ConnectedServiceKind: {
        enumValues: {
            "custom": 0,
            "azureSubscription": 1,
            "chef": 2,
            "generic": 3,
        }
    },
    IdentityData: {
        fields: null
    },
    Process: {
        fields: null
    },
    ProcessReference: {
        fields: null
    },
    ProcessType: {
        enumValues: {
            "system": 0,
            "custom": 1,
            "inherited": 2,
        }
    },
    ProjectChangeType: {
        enumValues: {
            "modified": 0,
            "deleted": 1,
            "added": 2,
        }
    },
    ProjectInfo: {
        fields: null
    },
    ProjectMessage: {
        fields: null
    },
    ProjectProperty: {
        fields: null
    },
    Proxy: {
        fields: null
    },
    SourceControlTypes: {
        enumValues: {
            "tfvc": 1,
            "git": 2,
        }
    },
    TeamContext: {
        fields: null
    },
    TeamProject: {
        fields: null
    },
    TeamProjectCollection: {
        fields: null
    },
    TeamProjectCollectionReference: {
        fields: null
    },
    TeamProjectReference: {
        fields: null
    },
    TemporaryDataCreatedDTO: {
        fields: null
    },
    TemporaryDataDTO: {
        fields: null
    },
    WebApiConnectedService: {
        fields: null
    },
    WebApiConnectedServiceDetails: {
        fields: null
    },
    WebApiConnectedServiceRef: {
        fields: null
    },
    WebApiCreateTagRequestData: {
        fields: null
    },
    WebApiProject: {
        fields: null
    },
    WebApiProjectCollection: {
        fields: null
    },
    WebApiProjectCollectionRef: {
        fields: null
    },
    WebApiTagDefinition: {
        fields: null
    },
    WebApiTeam: {
        fields: null
    },
    WebApiTeamRef: {
        fields: null
    },
};
exports.TypeInfo.IdentityData.fields = {};
exports.TypeInfo.Process.fields = {
    type: {
        enumType: exports.TypeInfo.ProcessType
    },
};
exports.TypeInfo.ProcessReference.fields = {};
exports.TypeInfo.ProjectInfo.fields = {
    lastUpdateTime: {
        isDate: true,
    },
    properties: {
        isArray: true,
        typeInfo: exports.TypeInfo.ProjectProperty
    },
};
exports.TypeInfo.ProjectMessage.fields = {
    project: {
        typeInfo: exports.TypeInfo.ProjectInfo
    },
    projectChangeType: {
        enumType: exports.TypeInfo.ProjectChangeType
    },
};
exports.TypeInfo.ProjectProperty.fields = {};
exports.TypeInfo.Proxy.fields = {};
exports.TypeInfo.TeamContext.fields = {};
exports.TypeInfo.TeamProject.fields = {
    defaultTeam: {
        typeInfo: exports.TypeInfo.WebApiTeamRef
    },
};
exports.TypeInfo.TeamProjectCollection.fields = {};
exports.TypeInfo.TeamProjectCollectionReference.fields = {};
exports.TypeInfo.TeamProjectReference.fields = {};
exports.TypeInfo.TemporaryDataCreatedDTO.fields = {
    expirationDate: {
        isDate: true,
    },
};
exports.TypeInfo.TemporaryDataDTO.fields = {};
exports.TypeInfo.WebApiConnectedService.fields = {
    authenticatedBy: {
        typeInfo: VSSInterfaces.TypeInfo.IdentityRef
    },
    project: {
        typeInfo: exports.TypeInfo.TeamProjectReference
    },
};
exports.TypeInfo.WebApiConnectedServiceDetails.fields = {
    connectedServiceMetaData: {
        typeInfo: exports.TypeInfo.WebApiConnectedService
    },
};
exports.TypeInfo.WebApiConnectedServiceRef.fields = {};
exports.TypeInfo.WebApiCreateTagRequestData.fields = {};
exports.TypeInfo.WebApiProject.fields = {
    collection: {
        typeInfo: exports.TypeInfo.WebApiProjectCollectionRef
    },
    defaultTeam: {
        typeInfo: exports.TypeInfo.WebApiTeamRef
    },
};
exports.TypeInfo.WebApiProjectCollection.fields = {};
exports.TypeInfo.WebApiProjectCollectionRef.fields = {};
exports.TypeInfo.WebApiTagDefinition.fields = {};
exports.TypeInfo.WebApiTeam.fields = {};
exports.TypeInfo.WebApiTeamRef.fields = {};
