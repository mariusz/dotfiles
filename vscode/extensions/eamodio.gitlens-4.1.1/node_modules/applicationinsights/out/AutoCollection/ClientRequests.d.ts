/// <reference types="node" />
import http = require("http");
import https = require("https");
import Client = require("../Library/Client");
import "./diagnostic-channel/initialization";
declare class AutoCollectClientRequests {
    static disableCollectionRequestOption: string;
    static INSTANCE: AutoCollectClientRequests;
    private _client;
    private _isEnabled;
    private _isInitialized;
    constructor(client: Client);
    enable(isEnabled: boolean): void;
    isInitialized(): boolean;
    private _initialize();
    /**
     * Tracks an outgoing request. Because it may set headers this method must be called before
     * writing content to or ending the request.
     */
    static trackRequest(client: Client, requestOptions: string | http.RequestOptions | https.RequestOptions, request: http.ClientRequest, properties?: {
        [key: string]: string;
    }): void;
    dispose(): void;
}
export = AutoCollectClientRequests;
