/// <reference types="node" />
import http = require("http");
import Contracts = require("../Declarations/Contracts");
import RequestParser = require("./RequestParser");
/**
 * Helper class to read data from the requst/response objects and convert them into the telemetry contract
 */
declare class ServerRequestParser extends RequestParser {
    private static keys;
    private rawHeaders;
    private socketRemoteAddress;
    private connectionRemoteAddress;
    private legacySocketRemoteAddress;
    private userAgent;
    private sourceCorrelationId;
    private parentId;
    private operationId;
    private requestId;
    constructor(request: http.ServerRequest, requestId?: string);
    onError(error: Error | string, properties?: {
        [key: string]: string;
    }, ellapsedMilliseconds?: number): void;
    onResponse(response: http.ServerResponse, properties?: {
        [key: string]: string;
    }, ellapsedMilliseconds?: number): void;
    getRequestData(): Contracts.Data<Contracts.RequestData>;
    getRequestTags(tags: {
        [key: string]: string;
    }): {
        [key: string]: string;
    };
    getOperationId(tags: {
        [key: string]: string;
    }): string;
    getOperationParentId(tags: {
        [key: string]: string;
    }): string;
    getOperationName(tags: {
        [key: string]: string;
    }): string;
    getRequestId(): string;
    private _getAbsoluteUrl(request);
    private _getIp();
    private _getId(name);
    static parseId(cookieValue: string): string;
}
export = ServerRequestParser;
