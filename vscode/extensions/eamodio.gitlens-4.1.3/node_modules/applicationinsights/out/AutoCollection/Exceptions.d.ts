import Contracts = require("../Declarations/Contracts");
import Client = require("../Library/Client");
declare class AutoCollectExceptions {
    static INSTANCE: AutoCollectExceptions;
    private _exceptionListenerHandle;
    private _rejectionListenerHandle;
    private _client;
    private _isInitialized;
    constructor(client: Client);
    isInitialized(): boolean;
    enable(isEnabled: boolean): void;
    /**
     * Track an exception
     * @param error the exception to track
     * @param handledAt where this exception was handled (leave null for unhandled)
     * @param properties additional properties
     * @param measurements metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.
     */
    static getExceptionData(error: Error, isHandled: boolean, properties?: {
        [key: string]: string;
    }, measurements?: {
        [key: string]: number;
    }): Contracts.Data<Contracts.ExceptionData>;
    private static parseStack(stack);
    dispose(): void;
}
export = AutoCollectExceptions;
